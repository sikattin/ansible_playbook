---

- name: "Install mysql"
  block:
    - name: "Preconfiguration setup"
      block:
        - name: "Install required packages for build"
          package:
            name: "{{ item }}"
            state: latest
          loop:
            - "gcc"
            - "gcc-c++"
            - "make"
            - "cmake"
            - "tar"
            - "unzip"
            - "gzip"
            - "bison"
            - "ncurses-devel"

        - name: "Add group"
          group:
            name: "{{ mysql.conf.user }}"
            gid: 503
            state: present
            
        - name: "Add user"
          user:
            name: "{{ mysql.conf.user }}"
            uid: 503
            group: mysql
            system: yes
            
        - name: "create the install and directory"
          file:
            path: "{{ item }}"
            state: directory
          loop:
            - "{{ mysql.conf.basedir }}"
            - "{{ mysql.conf.datadir }}"
            
      tags: mysql_install_preconfig


    - name: "Build and install mysql"
      block:
        - name: "download source tarball"
          get_url:
            url: "http://ftp.iij.ad.jp/pub/db/mysql/Downloads/MySQL-{{ mysql.version }}/mysql-{{ mysql.version }}.{{ mysql.release_version }}.tar.gz"
            dest: "/usr/local/src/mysql-{{ mysql.version }}.{{ mysql.release_version }}.tar.gz"
            checksum: "md5:http://ftp.iij.ad.jp/pub/db/mysql/Downloads/MySQL-{{ mysql.version }}/mysql-{{ mysql.version }}.{{ mysql.release_version }}.tar.gz.md5"
            force: yes
            
        - name: "clean up the build directory"
          file:
            path: "/usr/local/src/bld/mysql-{{ mysql.version }}.{{ mysql.release_version }}}"
            state: absent
            
        - name: "create the build directory"
          file:
            path: /usr/local/src/bld
            state: directory
            
        - name: "unarchive source archive"
          unarchive:
            src: "/usr/local/src/mysql-{{ mysql.version }}.{{ mysql.release_version }}.tar.gz"
            dest: /usr/local/src/bld
            remote_src: yes
            
        - name: "configure mysql"
          shell: |
            cmake . \
            -DCMAKE_INSTALL_PREFIX={{ mysql.conf.basedir }} \
            -DMYSQL_DATADIR={{ mysql.conf.datadir }} \
            -DDEFAULT_CHARSET=sjis
          args:
            chdir: "/usr/local/src/bld/mysql-{{ mysql.version }}.{{ mysql.release_version }}"
          check_mode: no
            
        - name: make clean
          make:
            chdir: "/usr/local/src/bld/mysql-{{ mysql.version }}.{{ mysql.release_version }}"
            target: clean
            
        - name: "Remove CmakeCache"
          file:
            path: "/usr/local/src/bld/mysql-{{ mysql.version }}.{{ mysql.release_version }}/CMakeCache.txt"
            state: absent
            
        - name: make
          make:
            chdir: "/usr/local/src/bld/mysql-{{ mysql.version }}.{{ mysql.release_version }}"
            
        - name: make install
          make:
            chdir: "/usr/local/src/bld/mysql-{{ mysql.version }}.{{ mysql.release_version }}"
            target: install
          
        - name: delete source tarball and build directory
          file:
            path: "{{ item }}"
            state: absent
          loop:
            - "/usr/local/src/mysql-{{ mysql.version }}.{{ mysql.release_version }}.tar.gz"
            - "/usr/local/src/bld/mysql-{{ mysql.version }}.{{ mysql.release_version }}"
      tags: mysql_install
      
      
    - name: "Settings mysql"
      block:
        - name: Copy config file
          template:
            src: etc/my.cnf
            dest: /etc/my.cnf
            owner: root
            group: root
            
        - name: Change the owner
          file:
            path: "{{ item }}"
            owner: "{{ mysql.conf.user }}"
            group: "{{ mysql.conf.user }}"
            recurse: yes
          loop:
            - "{{ mysql.conf.basedir }}"
            - "{{ mysql.conf.datadir }}"
            
        - name: initialize mysql db
          shell: /usr/local/mysql/scripts/mysql_install_db --basedir=/usr/local/mysql --datadir=/dblab/var --user mysql --collation-server=sjis_japanese_ci
          ignore_errors: True
            
        - name: Change the owner of install directory
          file:
            path: "{{ mysql.conf.basedir }}"
            owner: root
            group: root
            recurse: yes

        - name: Change the owner of data directory
          file:
            path: "{{ mysql.conf.datadir }}"
            owner: "{{ mysql.conf.user }}"
            group: "{{ mysql.conf.user }}"
            recurse: yes
            
        - name: Copy service script
          copy:
            src: "{{ mysql.conf.basedir }}/support-files/mysql.server"
            dest: /etc/init.d/mysqld
            owner: root
            group: root
            mode: 0755
            remote_src: yes
            
        - name: Create directories
          file:
            path: "{{ item }}"
            state: directory
          loop:
            - "{{ mysql.conf.log_error | dirname }}"
            - "{{ mysql.conf.pid_file | dirname }}"
            
        - name: Change the owner
          file:
            path: "{{ item }}"
            owner: "{{ mysql.conf.user }}"
            group: "{{ mysql.conf.user }}"
            recurse: yes
          loop:
            - "{{ mysql.conf.log_error | dirname }}"
            - "{{ mysql.conf.pid_file | dirname }}"
            
      tags: mysql_settings
      
    - name: "Service"
      block:
        - name: "Start mysqld service and enables it on the boot"
          service:
            name: mysqld
            enabled: yes
            state: started
      tags: mysql_service

    - name: clean up
      block:
        - name: remove installed packages for build
          package:
            name: "{{ item }}"
            state: absent
          loop:
            - "gcc"
            - "gcc-c++"
            - "cmake"
            - "tar"
            - "unzip"
            - "bison"
            - "ncurses-devel"
          notify: yum_clean_all

